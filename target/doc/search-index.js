var searchIndex = JSON.parse('{\
"processor":{"doc":"A processor simulation library","t":"DDDDLLLLLLLLMLLLMLLLLLFLLLLLLLLMMMMLLLMMMLLLLLLLLLLLLLLL","n":["Log","Process","ProcessInfo","Processor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","decision","eq","eq","exec","extra","fmt","fmt","fmt","fmt","fork","format_logs","from","from","from","from","into","into","into","into","pid","pid","priority","processes","run","signal","sleep","state","stop_reason","timings","to_string","to_string","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","wait"],"q":[[0,"processor"]],"d":["Running iteration log","The interface offered by the <code>Processor</code> to a <code>Process</code>.","Information about a process state.","The processor simulator.","","","","","","","","","The action requested by the scheduler.","","","Execute one unit of time.","Extra details about the process","","","","","Send a <code>Syscall::Fork</code> system call.","Format the <code>Processor</code>’s logs to a <code>String</code>.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The PID of the process.","The PID of the process.","The process priority","The list of processes and their corresponding states …","Start a new processor simulation.","Send a <code>Syscall::Signal</code> system call.","Send a <code>Syscall::Sleep</code> system call.","The process state.","The reason that a process has stopped.","The process timings (total time, system call time, running …","","","","","","","","","","","","","","","Send a <code>Syscall::Wait</code> system call."],"i":[0,0,0,0,18,5,1,3,18,5,1,3,1,1,3,5,3,1,1,3,3,5,0,18,5,1,3,18,5,1,3,5,3,3,1,18,5,5,3,1,3,1,3,18,5,1,3,18,5,1,3,18,5,1,3,5],"f":[0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[1,1],2],[[3,3],2],[[[5,[4]]]],0,[[1,6],7],[[1,6],7],[[3,6],7],[[3,6],7],[[[5,[4]],[0,[8,9]],10],11],[[[12,[1]]],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[4,[0,[8,9]]],[[14,[1]]]],[[[5,[4]],15]],[[[5,[4]],15]],0,0,0,[[],13],[[],13],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],17],[[],17],[[],17],[[],17],[[[5,[4]],15]]],"c":[],"p":[[3,"Log"],[15,"bool"],[3,"ProcessInfo"],[8,"Scheduler"],[3,"Process"],[3,"Formatter"],[6,"Result"],[8,"FnOnce"],[8,"Send"],[15,"i8"],[3,"Pid"],[15,"slice"],[3,"String"],[3,"Vec"],[15,"usize"],[4,"Result"],[3,"TypeId"],[3,"Processor"]]},\
"runner":{"doc":"","t":"F","n":["main"],"q":[[0,"runner"]],"d":[""],"i":[0],"f":[[[]]],"c":[],"p":[]},\
"scheduler":{"doc":"A scheduler library.","t":"NNNNNNNDNIENNNIENNNENENENNLLLLLLLLLLLLLFLLLLLLLLLLLLLLLLLLLLLLKLLLLLLLLLLLLLLLLLLLLLLLKLKLKKFFLKKLKLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMM","n":["Deadlock","Done","Exit","Expired","Fork","NoRunningProcess","Panic","Pid","Pid","Process","ProcessState","Ready","Run","Running","Scheduler","SchedulingDecision","Signal","Sleep","Sleep","StopReason","Success","Syscall","Syscall","SyscallResult","Wait","Waiting","add","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfs","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","eq","eq","eq","eq","eq","eq","eq","equivalent","expired","extra","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","hash","into","into","into","into","into","into","list","new","next","partial_cmp","pid","priority","priority_queue","round_robin","set_remaining","state","stop","syscall","timings","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","event","pid","timeslice","remaining","syscall"],"q":[[0,"scheduler"],[127,"scheduler::ProcessState"],[128,"scheduler::SchedulingDecision"],[130,"scheduler::StopReason"]],"d":["The OS cannot continue anymore, as all the processes are …","There are no more processes to schedule.","Ask the scheduler to finish the process.","The timeslice allocated for the process has expired and …","Create a new process and return its PID.","The system call was issues while no process was scheduled.","The process with PID 1 has stopped.","The PID of a process","Returned after a <code>Syscall::Fork</code> system call.","The trait that the Process Control Block (PCB) has to …","The state of a process.","The process is ready to be scheduled.","Run the process with PID <code>pid</code> for a maximum of <code>timeslice</code> …","The process is currently scheduled.","The trait that any scheduler has to implement.","The action that the scheduler asks the OS to take.","Signal all processes that wait for an event.","Sleep the amount of specified time units.","Ask the scheduler to suspend for an amount of time","The reason that a process has stopped and the OS has …","The system call was successful.","A system call that processes make towards the scheduler.","The process sent a <code>Syscall</code> system call.","The result returned by a system call.","Wait for an event","The process is waiting for an event or sleeping.","","","","","","","","","","","","","","Returns a structure that implements the <code>Scheduler</code> trait …","","","","","","","","","","","","","","","","","","","","","","","Returns details information","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns the list of processes.","","Returns the action that the OS has to perform next.","","Return the PID of the process.","Returns the process priority","Returns a structure that implements the <code>Scheduler</code> trait …","Returns a structure that implements the <code>Scheduler</code> trait …","","Return the state of the process.","The scheduler is informed about the stopping of a process …","","Returns process timings as a tuple of (total, syscalls, …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The event that the process is waiting for.","","","The number of time units that the process has not used …","The system call."],"i":[5,5,6,8,6,7,5,0,7,0,0,9,5,9,0,0,6,5,6,0,7,0,8,0,6,9,1,1,5,6,7,8,9,1,5,6,7,8,9,0,1,5,6,7,8,9,1,5,6,7,8,9,1,1,1,5,6,7,8,9,1,8,16,1,1,5,5,6,7,8,8,9,9,1,5,6,7,8,9,1,1,5,6,7,8,9,4,1,4,1,16,16,0,0,8,16,4,8,16,1,5,6,7,8,9,1,5,8,9,1,5,6,7,8,9,1,5,6,7,8,9,1,5,6,7,8,9,22,23,23,24,24],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,2]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[3,2],4],[1,1],[5,5],[6,6],[7,7],[8,8],[9,9],[[]],[[]],[[]],[[]],[[]],[[]],[[1,1],10],[[1,1],11],[[1,2],11],[[5,5],11],[[6,6],11],[[7,7],11],[[8,8],11],[[9,9],11],[[],11],[[],8],[[],12],[[1,13],14],[[1,13],14],[[5,13],14],[[5,13],14],[[6,13],14],[[7,13],14],[[8,13],14],[[8,13],14],[[9,13],14],[[9,13],14],[[]],[[]],[[]],[[]],[[]],[[]],[[1,15]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[17,[16]]]],[2,1],[[],5],[[1,1],[[18,[10]]]],[[],1],[[],19],[[3,2],4],[[3,2],4],[[8,2]],[[],9],[8,7],[6,8],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],0,0,0,0,0],"c":[],"p":[[3,"Pid"],[15,"usize"],[3,"NonZeroUsize"],[8,"Scheduler"],[4,"SchedulingDecision"],[4,"Syscall"],[4,"SyscallResult"],[4,"StopReason"],[4,"ProcessState"],[4,"Ordering"],[15,"bool"],[3,"String"],[3,"Formatter"],[6,"Result"],[8,"Hasher"],[8,"Process"],[3,"Vec"],[4,"Option"],[15,"i8"],[4,"Result"],[3,"TypeId"],[13,"Waiting"],[13,"Run"],[13,"Syscall"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
